[credential]
  helper = cache --timeout=3600
[diff]
  renames = copies
  mnemonicprefix = true
[user]
  email = devxom@gmail.com
  name = Ilya Reshetnikov
  signingkey = pubkey
[core]
  excludesfile = ~/.gitignore_global
  editor = subl -w
  quotepath = false
  trustctime = false
  pager = less -FRSX
  whitespace = -trailing-space
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[github]
  user = devxom
  token = token
[gitflow "prefix"]
  feature = feature-
  release = release-
  hotfix = hotfix-
  support = support-
  versiontag = v
[pretty]
  nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"
[commit]
  template = ~/.gitmessage
[alias]
  ac = apply --check
  adda = !git add -A && git status    # Add untracked, remove deleted, and show status
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  b = branch
  c = commit
  ca = commit - a -m
  ci = commit
  co = checkout
  dc = diff --cached
  dh1 = diff HEAD~1
  di = diff
  ds = diff --stat=160,120
  dt = difftool
  dtc = difftool --cached
  flat = clone --depth 1
  human = name-rev --name-only --refs=refs/heads/*
  l  = log --graph --pretty=format:'%C(Yellow)%h %C(Cyan)%ad %C(White)%s%C(Green)%d %C(Blue)[%an]' --date=short
  last = "!git log -7 HEAD --abbrev-commit --date=short --pretty=format:'%h%x00%cd%x00%s%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"\\033[31m%s\\033[m \\033[32m%s\\033[m  %-.40s \\033[30;1m%s\\033[m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1â€¦\",\"g\",$3), $4, $5 }';"
  lg = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
  report = "log --author=Ilya --since='2 sunday ago' --until='1 sunday ago' --format='%Cgreen%ci%Creset %s%Creset' --no-merges"
  report-csv = "log --author=Ilya --since='2 sunday ago' --until='1 sunday ago' --format='\"%ci\",\"%s\"' --no-merges"
  lsf = "!git ls-files | grep -i"
  ours = "!f() { git checkout --ours $@ && git add $@; }; f"
  plom = pull origin master
  plpm = pull upstream master
  psao = push --all origin
  psom = push origin master
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
  snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  st = status
  subpull = !git submodule foreach git pull --tags origin master
  subrepo = !sh -c 'filter-branch --prune-empty --subdirectory-filter $1 master' -
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
  trim = !git remote prune origin && git gc
  unassume = update-index --no-assume-unchanged
  unassumeall = !git assumed | xargs git update-index --no-assume-unchanged
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
  # Fetch a repository ($1) and checkout its ref ($2) HEAD
  # Use: `git browse https://github.com/name/repo <commit-ish>`
  browse = !bash -c 'git fetch $1 ${2:-HEAD} && git checkout FETCH_HEAD' -
  # Fetch and checkout a GitHub Pull Request from a remote (defaults to `origin`)
  # Use: `git gh-pr 123` or `git gh-pr 123 upstream`
  gh-pr = !bash -c 'git fetch -fu ${2:-origin} refs/pull/$1/head:gh-pr/$1 && git checkout gh-pr/$1' -
